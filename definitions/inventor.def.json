{
    "name": "FlashForge Inventor I",
    "id": "inventor",
    "version": 2,
    "inherits": "fdmprinter",
    "metadata": {
        "visible": true,
        "author": "valueerror",
        "manufacturer": "FlashForge",
        "supports_usb_connection": true,
        "has_machine_quality": true,
        "has_materials": true,
        "platform": "FlashForge_Inventor_I.stl",
        "file_formats": "text/x-gcode",
        "platform_offset": [ 0, 0, 0],
        "exclude_materials": [ "generic_hips","generic_hips_175",
							   "generic_petg","generic_petg_175",
							   "generic_cpa", "generic_nylon",
							   "generic_nylon_175", "generic_bam",
							   "generic_pp","generic_pva_175",
							   "generic_pc", "generic_pva", "generic_tpu",
							   "generic_tough", "generic_cpe", "generic_cpe_175",
							   "generic_cpe_plus", "generic_pet"],
        "preferred_quality": "normal",
        "machine_extruder_trains":
        {
            "0": "inventor_extruder_0",
            "1": "inventor_extruder_1"
        }
    },
    "settings": {
        "single_gcode": {
            "label": "GCode for single extrusion",
            "description": "Start GCode to run when doing single extrusion",
            "type": "str",
            "settable_per_mesh": false,
            "settable_per_extruder": false,
            "settable_per_meshgroup": false,
            "default_value": ";Start Gcode\nM140 S{material_bed_temperature};   Heat bed up to first layer temperature\nM104 S{material_print_temperature_layer_0, initial_extruder_nr} T{initial_extruder_nr} ; set left or right extruder temperature\nM104 S{material_print_temperature} T1;   Set nozzle temperature of Left extruder to first layer temperature\nM107;   Fan off\nG90;   Absolute Programming\nG28;   Move to Home position \nM132 X Y Z A B;   Load current home position from EEPROM\nG1 Z50 F600;   Move bed down to allow safe movement of nozzles lo left front\nG1 X-110.5 Y-74 F6000;   Move nozzles to left front\nM7;   Wait For Platform to reach target temperature\nM6 T{initial_extruder_nr}; wait for left or right nozzle to reach target temperature\nM106; enable cooling fan\nM907 X100 Y100 Z40 A80 B80;   Set digital potentiometer value. A and B typically 100 for tough filament like ABS and 80 for brittle like PLA. A is Right B is Left.\nG1 Z0.6 F3300; Go to start height\nG4 P2000;   Dwell time\nG1 Z0.2 F7200.000;   Move to first layer height\nM108 T{initial_extruder_nr};   Tool change to current extruder \n;*** end of start gcode ***"
        },
        "dual_gcode": {
            "label": "GCode for dual extrusion",
            "description": "Start GCode to run when doing dual extrusion",
            "type": "str",
            "settable_per_mesh": false,
            "settable_per_extruder": false,
            "settable_per_meshgroup": false,
            "default_value": ";Start Gcode\nM140 S{material_bed_temperature};   Heat bed up to first layer temperature\nM104 S{material_print_temperature} T0;   Set nozzle temperature of Right extruder to first layer temperature\nM104 S{material_print_temperature} T1;   Set nozzle temperature of Left extruder to first layer temperature\nM107;   Fan off\nG90;   Absolute Programming\nG28;   Move to Home position \nM132 X Y Z A B;   Load current home position from EEPROM\nG1 Z50 F600;   Move bed down to allow safe movement of nozzles lo left front\nG1 X-110.5 Y-74 F6000;   Move nozzles to left front\nM7;   Wait For Platform to reach target temperature\nM6 T0;   Wait For Right nozzle to reach target temperature\nM6 T1;   Wait For Left nozzle to reach target temperature\n; M106 enable cooling fan\nM907 X100 Y100 Z40 A80 B80;   Set digital potentiometer value. A and B typically 100 for tough filament like ABS and 80 for brittle like PLA. A is Right B is Left.\nG1 Z0.6 F3300; Go to start height\nG4 P2000;   Dwell time\nG1 Z0.2 F7200.000;   Move to first layer height\nM108 T{initial_extruder_nr};   Tool change to current extruder;*** end of start gcode ***"
        }
    },
    "overrides": {
        "machine_name": { "default_value": "inventor" },
        "machine_gcode_flavor": { "default_value": "Makerbot" },
		"material_diameter": { "default_value": 1.75 },
		"machine_nozzle_size": { "default_value": 0.4 },
        "machine_extruder_count": { "default_value": 2 },
        "machine_heated_bed": { "default_value": true },
        "machine_center_is_zero": { "default_value": true },
        "machine_height": { "default_value": 160 },
        "machine_depth": { "default_value": 150 },
        "machine_width": { "default_value": 230 },
        "speed_print": { "default_value": 60 },
        "layer_height": { "default_value": 0.2 },
        "adhesion_type": { "default_value": "skirt" },
        "infill_sparse_density": { "default_value": 20 },
        "material_bed_temperature" : { "default_value":50},
        "prime_tower_size": { "default_value": 8.660254037844387 },
        "prime_tower_position_x": {"value": "machine_width/2 - max(extruderValue(adhesion_extruder_nr, 'brim_width') * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 if adhesion_type == 'brim' or (prime_tower_brim_enable and adhesion_type != 'raft') else (extruderValue(adhesion_extruder_nr, 'raft_margin') if adhesion_type == 'raft' else (extruderValue(adhesion_extruder_nr, 'skirt_gap') if adhesion_type == 'skirt' else 0)), max(extruderValues('travel_avoid_distance'))) - max(extruderValues('support_offset')) - sum(extruderValues('skirt_brim_line_width')) * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 - (resolveOrValue('draft_shield_dist') if resolveOrValue('draft_shield_enabled') else 0) - 1"},
        "prime_tower_position_y": {"value": "machine_depth/2 - prime_tower_size - max(extruderValue(adhesion_extruder_nr, 'brim_width') * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 if adhesion_type == 'brim' or (prime_tower_brim_enable and adhesion_type != 'raft') else (extruderValue(adhesion_extruder_nr, 'raft_margin') if adhesion_type == 'raft' else (extruderValue(adhesion_extruder_nr, 'skirt_gap') if adhesion_type == 'skirt' else 0)), max(extruderValues('travel_avoid_distance'))) - max(extruderValues('support_offset')) - sum(extruderValues('skirt_brim_line_width')) * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 - (resolveOrValue('draft_shield_dist') if resolveOrValue('draft_shield_enabled') else 0) - 1"},
        "speed_travel": { "default_value": 120 },
        "machine_head_with_fans_polygon": {
            "default_value": [
                [-15, -25],
                [-15, 35],
                [40, 35],
                [40, -25]
            ]
        },
        "gantry_height": {
            "default_value": 30
        },
        "machine_start_gcode": {"value": "dual_gcode if len(extruderValues('extruder_nr')) > 1 else single_gcode" },
        "machine_end_gcode": {"default_value": ";End Gcode\nM107;   Disable cooling fan\nM104 S0 T0;  Set Nozzle temperature of Right nozzle to zero\nM104 S0 T1;  Set Nozzle temperature of Left nozzle to zero\nM140 S0;   Turn bed heating off\nG162 Z;    Home positive for Z axis\nG28 X0 Y0;   Return X and Y to home position\nM132 X Y Z A B\nG91;   Set to relative positioning\nM18;   Disable stepper motors for all axes"}      
    }
}
